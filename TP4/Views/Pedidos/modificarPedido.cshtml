@model TP4.ViewModels.PedidosCadetesViewModel

@{
    ViewBag.Title = "Modificación de pedido";
}

<section>
    <h1 class="text-center">Modificar información del pedido:</h1>
    <article>
        <form asp-controller="Pedidos" asp-action="modificarPedidoPost" method="post">


            <label asp-for="@Model.IdCadete"> @Html.DisplayNameFor(Model => Model.IdCadete)
            <select asp-for="@Model.IdCadete">
                @foreach (var cadete in Model.Cadetes)
                    @if(cadete.ID == @Model.IdCadete){
                        <option value="@cadete.ID" selected>@cadete.Nombre</option>
                    } else { 
                        <option value="@cadete.ID">@cadete.Nombre</option>
                    }
                }
            </select>
            </label>
            <span class="form-control" asp-validation-for="@Model.IdCadete" ></span>

            <label asp-for="@Model.Observaciones"> @Html.DisplayNameFor(Model => Model.Observaciones)
                <input asp-for="@Model.Observaciones" value="@Model.Observaciones">
            </label>
            <span class="form-control" asp-validation-for="@Model.Observaciones" ></span>

            <label id="estadopedido" asp-for="@Model.EstaRealizado"> ¿Pedido realizado?
                <input asp-for="@Model.EstaRealizado">
            </label>
            <span class="form-control" asp-validation-for="@Model.EstaRealizado" ></span>

            <input asp-for="@Model.Numero" value="@Model.Numero" hidden>
            <input asp-for="@Model.IdCliente" value="@Model.IdCliente" hidden>

            <!-- Requerido para correcta validación en backend. No pasa la lista en sí, sino que es necesario para que el modelo recibido en el controlador se considere válido.-->
            <input asp-for="@Model.Cadetes" value="@Model.Cadetes" hidden>

            <input type="submit" value="Cargar">
        </form>
    </article>
</section>

@section Scripts { <partial name="_ValidationScriptsPartial" /> } 


